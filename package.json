{
    "name": "file-browser",
    "publisher": "bodil",
    "displayName": "File Browser",
    "description": "A nicer alternative to the file open dialog.",
    "version": "0.2.11",
    "license": "LGPL-3.0+",
    "author": {
        "name": "Bodil Stokke",
        "url": "https://bodil.lol/"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/bodil/vscode-file-browser"
    },
    "keywords": [
        "emacs",
        "helm"
    ],
    "icon": "images/icon.png",
    "engines": {
        "vscode": "^1.75.0"
    },
    "categories": [
        "Other"
    ],
    "main": "./out/extension.js",
    "extensionKind": [
        "workspace",
        "ui"
    ],
    "activationEvents": [
        "onCommand:file-browser.open",
        "onCommand:file-browser.rename",
        "onCommand:file-browser.stepIn",
        "onCommand:file-browser.stepOut",
        "onCommand:file-browser.actions"
    ],
    "contributes": {
        "configuration": {
            "title": "File Browser",
            "properties": {
                "file-browser.removeIgnoredFiles": {
                    "markdownDescription": "Never show or match files that are hidden when matching by either `#file-browser.hideIgnoredFiles#` or `#file-browser.hideDotfiles#`.",
                    "type": "boolean",
                    "default": false
                },
                "file-browser.hideDotfiles": {
                    "markdownDescription": "When filtering by name, hide unmatched dotfiles (files whose names start with `.`).",
                    "type": "boolean",
                    "default": true
                },
                "file-browser.hideIgnoredFiles": {
                    "markdownDescription": "When filtering by name, hide unmatched files according to rules in `.gitignore` style files, as defined in `#file-browser.ignoreFileTypes#`.",
                    "type": "boolean",
                    "default": false
                },
                "file-browser.labelIgnoredFiles": {
                    "markdownDescription": "Label files hidden by a `.gitignore` file as such.",
                    "type": "boolean",
                    "default": false
                },
                "file-browser.ignoreFileTypes": {
                    "markdownDescription": "A list of `.gitignore` style files to look for and hide files accordingly when browsing. The extension will obey only the first file it finds from this list, searching upwards from the current directory, so make sure the order is as you like it.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        ".gitignore",
                        ".npmignore",
                        ".vscodeignore"
                    ]
                }
            }
        },
        "commands": [
            {
                "command": "file-browser.open",
                "title": "File Browser: Open"
            },
            {
                "command": "file-browser.rename",
                "title": "File Browser: Rename"
            },
            {
                "command": "file-browser.stepIn",
                "title": "File Browser: Step In"
            },
            {
                "command": "file-browser.stepOut",
                "title": "File Browser: Step Out"
            },
            {
                "command": "file-browser.actions",
                "title": "File Browser: Actions"
            }
        ],
        "keybindings": [
            {
                "key": "right",
                "command": "file-browser.stepIn",
                "when": "inFileBrowser"
            },
            {
                "key": "left",
                "command": "file-browser.stepOut",
                "when": "inFileBrowser"
            },
            {
                "key": "ctrl+a",
                "command": "file-browser.actions",
                "when": "inFileBrowser"
            },
            {
                "key": "tab",
                "command": "file-browser.tabNext",
                "when": "inFileBrowser"
            },
            {
                "key": "shift+tab",
                "command": "file-browser.tabPrev",
                "when": "inFileBrowser"
            },
            {
                "key": "l",
                "command": "file-browser.stepIn",
                "when": "inFileBrowser && !file-browser.inSearchMode && !file-browser.inRenameMode && !file-browser.inCreateMode"
            },
            {
                "key": "h",
                "command": "file-browser.stepOut",
                "when": "inFileBrowser && !file-browser.inSearchMode && !file-browser.inRenameMode && !file-browser.inCreateMode"
            },
            {
                "key": "j",
                "command": "file-browser.moveDown",
                "when": "inFileBrowser && !file-browser.inSearchMode && !file-browser.inRenameMode && !file-browser.inCreateMode"
            },
            {
                "key": "k",
                "command": "file-browser.moveUp",
                "when": "inFileBrowser && !file-browser.inSearchMode && !file-browser.inRenameMode && !file-browser.inCreateMode"
            },
            {
                "key": "/",
                "command": "file-browser.toggleSearchMode",
                "when": "inFileBrowser"
            },
            {
                "key": "i",
                "command": "file-browser.toggleSearchMode",
                "when": "inFileBrowser && !file-browser.inSearchMode"
            },
            {
                "key": "v",
                "command": "file-browser.toggleVisualMode",
                "when": "inFileBrowser && !file-browser.inSearchMode"
            },
            {
                "key": "escape",
                "command": "file-browser.handleEscapeKey",
                "when": "inFileBrowser && inFileBrowserEscapeHandler"
            },
            {
                "key": "escape",
                "command": "file-browser.exitSearchMode",
                "when": "inFileBrowser && file-browser.inSearchMode"
            },
            {
                "key": "ctrl+[",
                "command": "file-browser.exitSearchMode",
                "when": "inFileBrowser && file-browser.inSearchMode"
            },
            {
                "key": "escape",
                "command": "file-browser.exitVisualMode",
                "when": "inFileBrowser && file-browser.inVisualMode"
            },
            {
                "key": "ctrl+[",
                "command": "file-browser.exitVisualMode",
                "when": "inFileBrowser && file-browser.inVisualMode"
            },
            {
                "key": "escape",
                "command": "file-browser.exitRenameMode",
                "when": "inFileBrowser && file-browser.inRenameMode"
            },
            {
                "key": "ctrl+[",
                "command": "file-browser.exitRenameMode",
                "when": "inFileBrowser && file-browser.inRenameMode"
            },
            {
                "key": "escape",
                "command": "file-browser.exitCreateMode",
                "when": "inFileBrowser && file-browser.inCreateMode"
            },
            {
                "key": "ctrl+[",
                "command": "file-browser.exitCreateMode",
                "when": "inFileBrowser && file-browser.inCreateMode"
            },
            {
                "key": "r",
                "command": "file-browser.renameInVisualMode",
                "when": "inFileBrowser && file-browser.inVisualMode"
            },
            {
                "key": "r",
                "command": "file-browser.renameFile",
                "when": "inFileBrowser && !file-browser.inSearchMode && !file-browser.inVisualMode && !file-browser.inRenameMode && !file-browser.inCreateMode"
            },
            {
                "key": "d",
                "command": "file-browser.deleteInVisualMode",
                "when": "inFileBrowser && file-browser.inVisualMode"
            },
            {
                "key": "d",
                "command": "file-browser.deleteFile",
                "when": "inFileBrowser && !file-browser.inSearchMode && !file-browser.inVisualMode && !file-browser.inRenameMode && !file-browser.inCreateMode"
            },
            {
                "key": "c",
                "command": "file-browser.createNewFile",
                "when": "inFileBrowser && !file-browser.inSearchMode"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint src",
        "watch": "tsc -watch -p ./",
        "check": "npm run compile && npm run lint"
    },
    "devDependencies": {
        "@eslint/js": "^9.11.1",
        "@types/eslint__js": "^8.42.3",
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.8",
        "@types/node": "^22.7.4",
        "@types/vscode": "1.75.1",
        "@typescript-eslint/eslint-plugin": "^8.8.0",
        "@typescript-eslint/parser": "^8.8.0",
        "@vscode/test-electron": "^2.4.1",
        "eslint": "^9.11.1",
        "glob": "^11.0.0",
        "mocha": "^10.7.3",
        "typescript": "^5.6.2",
        "typescript-eslint": "^8.8.0"
    },
    "dependencies": {
        "@bodil/opt": "^0.2.5",
        "ignore": "^6.0.2"
    }
}
